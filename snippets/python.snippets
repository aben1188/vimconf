snippet im
	import ${1:module}
# Module Docstring
snippet doc
	"""${1:doc}"""

# New Class
snippet cl
	class ${1:ClassName}(${2:object}):
		"""${3:$1}"""
		def __init__(self):
			${4}

snippet cls
	class ${1:ClassName}(${2:object}):
		"""${3:$1}"""
		def __init__(self, ${4:arg}):
			${5:super($1, self).__init__()}
			self.$4 = $4
			${6}
# New Function/Method
snippet def
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		${3}
snippet deff
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		"""${3:$1}"""
		${4:pass}
snippet defa
	def ${1:mname}(self, ${2:arg}):
		${3:pass}

snippet defc
	@classmethod
	def ${1:mname}(cls):

snippet defs
	@staticmethod
	def ${1:mname}():

# if __name__ == '__main__':
snippet ifm
	if __name__ == '__main__':
		${1:main()}
